{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/corona2.jfif"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","text1","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","alt","src","logo","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.144ba8fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3sbOD\",\"card\":\"Cards_card__3b8TE\",\"infected\":\"Cards_infected__1VfXA\",\"text1\":\"Cards_text1__3jcGn\",\"recovered\":\"Cards_recovered__36Dsm\",\"deaths\":\"Cards_deaths__1BlOB\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed,  recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return ' loading..'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp className={styles.text1}  start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">active cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">recovered cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">deaths cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\nconst url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        // const modifedData = { confirmed, recovered, deaths, lastUpdate  }\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        })))\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n        return countries.map((country => country.name))\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\n\r\n\r\n\r\nconst Chart = ({data:{confirmed,deaths, recovered},country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([])\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const dailyData = await fetchDailyData()\r\n            setDailyData(dailyData);\r\n        }\r\n\r\n        fetchApi();\r\n    },[])\r\n\r\n\r\n\r\n    const lineChart = (\r\n        dailyData.length !==0 ? <Line\r\n            data={{\r\n                labels: dailyData.map(({date})=> date),\r\n                datasets: [{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: 'black',\r\n                    fill:true,\r\n                }, {\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label: 'deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n\r\n        /> : null\r\n    );\r\n\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n            data={{\r\n                labels:['infected','recovered','deaths'],\r\n                datasets:[{\r\n                    label:'people',\r\n                    backgroundColor:[\r\n                    'rgba(0, 0, 255, 0.5)',\r\n                    'rgba(0, 255, 0, 0.5)',\r\n                    'rgba(255, 0,0 , 0.5)'                    \r\n                    ],\r\n                    data: [confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true, text:`current state in ${country}`}\r\n            }} \r\n\r\n            />\r\n        ):null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n        {country ? barChart:lineChart}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n    // console.log(fetchedCountries)\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={e => handleCountryChange(e.target.value) }>\r\n                <option value=\"\" >Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from \"react\";\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker'\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport logo from './images/corona2.jfif'; // with import\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n        this.setState({ data: fetchedData, country: country })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { data, country } = this.state\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} alt=\"corona\" src={logo} />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// \"https://i.ibb.co/7QpKsCX/image.png\"}\r\nexport default App;\r\n\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App';\r\n\r\n\r\nReactDom.render(<App/>, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__394Sj\",\"container\":\"App_container__1-rtM\",\"image\":\"App_image__2jpnm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__Ccp5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3bbZG\"};","module.exports = __webpack_public_path__ + \"static/media/corona2.ddecfd75.jfif\";"],"sourceRoot":""}